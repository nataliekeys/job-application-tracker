{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Desktop\\\\job-organization\\\\client\\\\src\\\\components\\\\Jobs\\\\Jobs.js\";\nimport React, { useState } from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport Buttons from '../Buttons/Buttons';\nimport Search from '../Search/Search';\nimport Job from './Job/Job';\nimport useStyles from './styles';\n\nfunction Jobs({\n  setCurrentId\n}) {\n  const classes = useStyles();\n  const [data, setData] = useState('');\n  let jobs = useSelector(state => state.jobs);\n  let allJobs = useSelector(state => state.jobs);\n  const [searchQuery, setSearchQuery, searchClicked] = useState('');\n\n  if (data == \"All\" || data == \"\") {} else {\n    jobs = jobs.filter(jobs => jobs.status === data);\n  }\n\n  const filterButton = childdata => {\n    setData(childdata);\n  };\n\n  if (searchQuery) {\n    console.log(searchQuery);\n    jobs = jobs.filter(jobs => jobs.company.toLowerCase().includes(searchQuery));\n  }\n\n  return !allJobs.length ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Buttons, {\n    filterButton: filterButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    searchQuery: searchQuery,\n    setSearchQuery: setSearchQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), jobs.map(job => /*#__PURE__*/React.createElement(Grid, {\n    key: job._id,\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Job, {\n    job: job,\n    setCurrentId: setCurrentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }))));\n}\n\n;\nexport default Jobs;","map":{"version":3,"sources":["C:/Users/natal/Desktop/job-organization/client/src/components/Jobs/Jobs.js"],"names":["React","useState","Grid","CircularProgress","useSelector","Buttons","Search","Job","useStyles","Jobs","setCurrentId","classes","data","setData","jobs","state","allJobs","searchQuery","setSearchQuery","searchClicked","filter","status","filterButton","childdata","console","log","company","toLowerCase","includes","length","container","map","job","_id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport Buttons from '../Buttons/Buttons';\nimport Search from '../Search/Search'\nimport Job from './Job/Job';\nimport useStyles from './styles';\n\nfunction Jobs({ setCurrentId }) {\n\n  \n  const classes = useStyles();\n  const [data, setData] = useState('');\n  let jobs = useSelector((state) => state.jobs);\n  let allJobs= useSelector((state) => state.jobs);\n  const [searchQuery, setSearchQuery, searchClicked]= useState('');\n\n  if (data==\"All\" || data==\"\"){\n   \n  }else{\n    jobs = jobs.filter(jobs => jobs.status === data);\n  }\n  \n  const filterButton = (childdata) => {\n    setData(childdata);\n  \n  }\n\n \n  if (searchQuery){\n    console.log(searchQuery);\n    jobs = jobs.filter(jobs => jobs.company.toLowerCase().includes(searchQuery));\n  }\n\n \n  return (\n    !allJobs.length ? <CircularProgress /> : (\n      \n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n         <Grid className={classes.container} container alignItems=\"stretch\" spacing={0.5}>\n          <Buttons filterButton={filterButton}/>\n          <Search searchQuery={searchQuery} setSearchQuery={setSearchQuery}></Search>\n          </Grid>\n        {jobs.map((job) => (\n          <Grid key={job._id} item xs={12} sm={6} md={6}>\n            <Job job={job} setCurrentId={setCurrentId} />\n          </Grid>\n        ))}\n      </Grid>\n    )\n  );\n};\n\nexport default Jobs;\n"]},"metadata":{},"sourceType":"module"}