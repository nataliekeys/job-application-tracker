{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Desktop\\\\job-organization\\\\client\\\\src\\\\components\\\\Jobs\\\\Jobs.js\";\nimport React, { useState } from \"react\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport Buttons from \"../Buttons/Buttons\";\nimport Search from \"../Search/Search\";\nimport Job from \"./Job/Job\";\nimport useStyles from \"./styles\";\n\nfunction Jobs({\n  setCurrentId\n}) {\n  const classes = useStyles();\n  const [data, setData] = useState(\"\");\n  let jobs = useSelector(state => state.jobs);\n  let allJobs = useSelector(state => state.jobs);\n  const [searchQuery, setSearchQuery, searchClicked] = useState(\"\");\n\n  if (data == \"All\" || data == \"\") {} else {\n    jobs = jobs.filter(jobs => jobs.status === data);\n  }\n\n  const filterButton = childdata => {\n    setData(childdata);\n  };\n\n  if (searchQuery) {\n    console.log(searchQuery);\n    jobs = jobs.filter(jobs => jobs.company.toLowerCase().includes(searchQuery));\n  }\n\n  return !allJobs.length ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Buttons, {\n    filterButton: filterButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    searchQuery: searchQuery,\n    setSearchQuery: setSearchQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), jobs.map(job => /*#__PURE__*/React.createElement(Grid, {\n    key: job._id,\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Job, {\n    job: job,\n    setCurrentId: setCurrentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Jobs;","map":{"version":3,"sources":["C:/Users/natal/Desktop/job-organization/client/src/components/Jobs/Jobs.js"],"names":["React","useState","Grid","CircularProgress","useSelector","Buttons","Search","Job","useStyles","Jobs","setCurrentId","classes","data","setData","jobs","state","allJobs","searchQuery","setSearchQuery","searchClicked","filter","status","filterButton","childdata","console","log","company","toLowerCase","includes","length","container","map","job","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,mBAAvC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAgC;AAC9B,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAIa,IAAI,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAtB;AACA,MAAIE,OAAO,GAAGZ,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAzB;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,EAA8BC,aAA9B,IAA+ClB,QAAQ,CAAC,EAAD,CAA7D;;AAEA,MAAIW,IAAI,IAAI,KAAR,IAAiBA,IAAI,IAAI,EAA7B,EAAiC,CAChC,CADD,MACO;AACLE,IAAAA,IAAI,GAAGA,IAAI,CAACM,MAAL,CAAaN,IAAD,IAAUA,IAAI,CAACO,MAAL,KAAgBT,IAAtC,CAAP;AACD;;AAED,QAAMU,YAAY,GAAIC,SAAD,IAAe;AAClCV,IAAAA,OAAO,CAACU,SAAD,CAAP;AACD,GAFD;;AAIA,MAAIN,WAAJ,EAAiB;AACfO,IAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACAH,IAAAA,IAAI,GAAGA,IAAI,CAACM,MAAL,CAAaN,IAAD,IACjBA,IAAI,CAACY,OAAL,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCX,WAApC,CADK,CAAP;AAGD;;AAED,SAAO,CAACD,OAAO,CAACa,MAAT,gBACL,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAGL,oBAAC,IAAD;AACE,IAAA,SAAS,EAAElB,OAAO,CAACmB,SADrB;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,UAAU,EAAC,SAHb;AAIE,IAAA,OAAO,EAAE,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEnB,OAAO,CAACmB,SADrB;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,UAAU,EAAC,SAHb;AAIE,IAAA,OAAO,EAAE,GAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,OAAD;AAAS,IAAA,YAAY,EAAER,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAEL,WADf;AAEE,IAAA,cAAc,EAAEC,cAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CANF,EAkBGJ,IAAI,CAACiB,GAAL,CAAUC,GAAD,iBACR,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,GAAG,CAACC,GAAf;AAAoB,IAAA,IAAI,MAAxB;AAAyB,IAAA,EAAE,EAAE,EAA7B;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAwC,IAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAED,GAAV;AAAe,IAAA,YAAY,EAAEtB,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CAlBH,CAHF;AA4BD;;AAED,eAAeD,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport Buttons from \"../Buttons/Buttons\";\nimport Search from \"../Search/Search\";\nimport Job from \"./Job/Job\";\nimport useStyles from \"./styles\";\n\nfunction Jobs({ setCurrentId }) {\n  const classes = useStyles();\n  const [data, setData] = useState(\"\");\n  let jobs = useSelector((state) => state.jobs);\n  let allJobs = useSelector((state) => state.jobs);\n  const [searchQuery, setSearchQuery, searchClicked] = useState(\"\");\n\n  if (data == \"All\" || data == \"\") {\n  } else {\n    jobs = jobs.filter((jobs) => jobs.status === data);\n  }\n\n  const filterButton = (childdata) => {\n    setData(childdata);\n  };\n\n  if (searchQuery) {\n    console.log(searchQuery);\n    jobs = jobs.filter((jobs) =>\n      jobs.company.toLowerCase().includes(searchQuery)\n    );\n  }\n\n  return !allJobs.length ? (\n    <CircularProgress />\n  ) : (\n    <Grid\n      className={classes.container}\n      container\n      alignItems=\"stretch\"\n      spacing={3}\n    >\n      <Grid\n        className={classes.container}\n        container\n        alignItems=\"stretch\"\n        spacing={0.5}\n      >\n        <Buttons filterButton={filterButton} />\n        <Search\n          searchQuery={searchQuery}\n          setSearchQuery={setSearchQuery}\n        ></Search>\n      </Grid>\n      {jobs.map((job) => (\n        <Grid key={job._id} item xs={12} sm={6} md={6}>\n          <Job job={job} setCurrentId={setCurrentId} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport default Jobs;\n"]},"metadata":{},"sourceType":"module"}