{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Desktop\\\\job-organization\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport TextField from \"@mui/material/TextField\";\nimport useStyles from \"./styles\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { createJob, updateJob } from \"../../actions/jobs\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  const [jobData, setJobData] = useState({\n    title: \"\",\n    company: \"\",\n    status: \"\",\n    location: \"\",\n    link: \"\",\n    notes: \"\",\n    selectedFile: \"\",\n    coverLetter: \"\" // New field for cover letter file\n\n  });\n  const job = useSelector(state => currentId ? state.jobs.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (job) setJobData(job);\n  }, [job]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setJobData({\n      title: \"\",\n      company: \"\",\n      link: \"\",\n      status: \"\",\n      location: \"\",\n      selectedFile: \"\",\n      notes: \"\",\n      coverLetter: \"\" // Clear the cover letter field\n\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createJob(jobData));\n      clear();\n    } else {\n      dispatch(updateJob(currentId, jobData));\n      clear();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${job.title}\"` : \"Enter a Job\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"coverLetter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Cover Letter\"), /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setJobData({ ...jobData,\n      coverLetter: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/natal/Desktop/job-organization/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","Button","Typography","Paper","useDispatch","useSelector","FileBase","TextField","useStyles","InputLabel","createJob","updateJob","MenuItem","FormControl","Select","SelectChangeEvent","Form","currentId","setCurrentId","jobData","setJobData","title","company","status","location","link","notes","selectedFile","coverLetter","job","state","jobs","find","message","_id","dispatch","classes","clear","handleSubmit","e","preventDefault","paper","root","form","fileInput","base64"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport TextField from \"@mui/material/TextField\";\nimport useStyles from \"./styles\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { createJob, updateJob } from \"../../actions/jobs\";\n\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [jobData, setJobData] = useState({\n    title: \"\",\n    company: \"\",\n    status: \"\",\n    location: \"\",\n    link: \"\",\n    notes: \"\",\n    selectedFile: \"\",\n    coverLetter: \"\", // New field for cover letter file\n  });\n\n  const job = useSelector((state) =>\n    currentId ? state.jobs.find((message) => message._id === currentId) : null\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (job) setJobData(job);\n  }, [job]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setJobData({\n      title: \"\",\n      company: \"\",\n      link: \"\",\n      status: \"\",\n      location: \"\",\n      selectedFile: \"\",\n      notes: \"\",\n      coverLetter: \"\", // Clear the cover letter field\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createJob(jobData));\n      clear();\n    } else {\n      dispatch(updateJob(currentId, jobData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? `Editing \"${job.title}\"` : \"Enter a Job\"}\n        </Typography>\n\n        {/* ... Existing form fields ... */}\n\n        <div className={classes.fileInput}>\n          <InputLabel htmlFor=\"coverLetter\">Cover Letter</InputLabel>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setJobData({ ...jobData, coverLetter: base64 })\n            }\n          />\n        </div>\n\n        {/* ... Rest of the form ... */}\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}