{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Desktop\\\\job-organization\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport TextField from '@mui/material/TextField';\nimport useStyles from './styles';\nimport InputLabel from '@mui/material/InputLabel';\nimport { createJob, updateJob } from '../../actions/jobs';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  const [jobData, setJobData] = useState({\n    title: '',\n    company: '',\n    status: '',\n    location: '',\n    link: '',\n    notes: '',\n    selectedFile: ''\n  });\n  const job = useSelector(state => currentId ? state.jobs.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (job) setJobData(job);\n  }, [job]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setJobData({\n      title: '',\n      company: '',\n      link: '',\n      status: '',\n      location: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createJob(jobData));\n      clear();\n    } else {\n      dispatch(updateJob(currentId, jobData));\n      clear();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${job.title}\"` : \"Enter a Job\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: jobData.title,\n    onChange: e => setJobData({ ...jobData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"company\",\n    variant: \"outlined\",\n    label: \"Company\",\n    fullWidth: true,\n    value: jobData.company,\n    onChange: e => setJobData({ ...jobData,\n      company: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"Location\",\n    variant: \"outlined\",\n    label: \"Location\",\n    fullWidth: true,\n    value: jobData.location,\n    onChange: e => setJobData({ ...jobData,\n      location: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"Link\",\n    variant: \"outlined\",\n    label: \"Link\",\n    fullWidth: true,\n    multiline: true,\n    rows: 2,\n    value: jobData.link,\n    onChange: e => setJobData({ ...jobData,\n      link: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    fullWidth: true,\n    value: jobData.status,\n    label: \"Status\",\n    onChange: e => setJobData({ ...jobData,\n      status: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Not Started\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Not Started\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"In Progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"In Progress\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Submitted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Submitted\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setJobData({ ...jobData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    name: \"Notes\",\n    variant: \"outlined\",\n    label: \"Notes\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: jobData.notes,\n    onChange: e => setJobData({ ...jobData,\n      notes: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Clear\"))));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/natal/Desktop/job-organization/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","Button","Typography","Paper","useDispatch","useSelector","FileBase","TextField","useStyles","InputLabel","createJob","updateJob","MenuItem","FormControl","Select","SelectChangeEvent","Form","currentId","setCurrentId","jobData","setJobData","title","company","status","location","link","notes","selectedFile","job","state","jobs","find","message","_id","dispatch","classes","clear","handleSubmit","e","preventDefault","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport TextField from '@mui/material/TextField'\nimport useStyles from './styles';\nimport InputLabel from '@mui/material/InputLabel';\nimport { createJob, updateJob } from '../../actions/jobs';\n\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [jobData, setJobData] = useState({title: '', company: '', status: '', location: '', link: '',  notes: '',selectedFile: '' });\n  const job = useSelector((state) => (currentId ? state.jobs.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (job) setJobData(job);\n  }, [job]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setJobData({ title: '', company: '', link: '', status: '', location:'', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createJob(jobData));\n      clear();\n    } else {\n      dispatch(updateJob(currentId, jobData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? `Editing \"${job.title}\"` : \"Enter a Job\"}\n        </Typography>\n\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={jobData.title}\n          onChange={(e) => setJobData({ ...jobData, title: e.target.value })}\n        />\n        <TextField\n          name=\"company\"\n          variant=\"outlined\"\n          label=\"Company\"\n          fullWidth\n          value={jobData.company}\n          onChange={(e) => setJobData({ ...jobData, company: e.target.value })}\n        />\n\n        <TextField\n          name=\"Location\"\n          variant=\"outlined\"\n          label=\"Location\"\n          fullWidth\n          value={jobData.location}\n          onChange={(e) => setJobData({ ...jobData, location: e.target.value })}\n        />\n        <TextField\n          name=\"Link\"\n          variant=\"outlined\"\n          label=\"Link\"\n          fullWidth\n          multiline\n          rows={2}\n          value={jobData.link}\n          onChange={(e) => setJobData({ ...jobData, link: e.target.value })}\n        />\n\n        <FormControl>\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            fullWidth\n            value={jobData.status}\n            label=\"Status\"\n            onChange={(e) => setJobData({ ...jobData, status: e.target.value })}\n          >\n            <MenuItem value={\"Not Started\"}>Not Started</MenuItem>\n            <MenuItem value={\"In Progress\"}>In Progress</MenuItem>\n            <MenuItem value={\"Submitted\"}>Submitted</MenuItem>\n          </Select>\n          <div className={classes.fileInput}>\n            <Text></Text>\n            <FileBase\n              type=\"file\"\n              multiple={false}\n              onDone={({ base64 }) =>\n                setJobData({ ...jobData, selectedFile: base64 })\n              }\n            />\n          </div>\n          <TextField\n            name=\"Notes\"\n            variant=\"outlined\"\n            label=\"Notes\"\n            fullWidth\n            multiline\n            rows={4}\n            value={jobData.notes}\n            onChange={(e) => setJobData({ ...jobData, notes: e.target.value })}\n          />\n          <Button\n            className={classes.buttonSubmit}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            fullWidth\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={clear}\n            fullWidth\n          >\n            Clear\n          </Button>\n        </FormControl>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}