{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Desktop\\\\job-organization\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport TextField from '@mui/material/TextField';\nimport useStyles from './styles';\nimport InputLabel from '@mui/material/InputLabel';\nimport { createJob, updateJob } from '../../actions/jobs';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  const [jobData, setJobData] = useState({\n    title: '',\n    company: '',\n    status: '',\n    location: '',\n    link: '',\n    selectedFile: ''\n  });\n  const job = useSelector(state => currentId ? state.jobs.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (job) setJobData(job);\n  }, [job]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setJobData({\n      title: '',\n      company: '',\n      link: '',\n      status: '',\n      location: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createJob(jobData));\n      clear();\n    } else {\n      dispatch(updateJob(currentId, jobData));\n      clear();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${job.title}\"` : 'Enter a Job'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: jobData.title,\n    onChange: e => setJobData({ ...jobData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"company\",\n    variant: \"outlined\",\n    label: \"Company\",\n    fullWidth: true,\n    value: jobData.company,\n    onChange: e => setJobData({ ...jobData,\n      company: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"Location\",\n    variant: \"outlined\",\n    label: \"Location\",\n    fullWidth: true,\n    value: jobData.location,\n    onChange: e => setJobData({ ...jobData,\n      location: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"Link\",\n    variant: \"outlined\",\n    label: \"Link\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: jobData.link,\n    onChange: e => setJobData({ ...jobData,\n      link: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    fullWidth: true,\n    value: jobData.status,\n    label: \"Status\",\n    onChange: e => setJobData({ ...jobData,\n      status: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Not Started\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Not Started\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"In Progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"In Progress\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Submitted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Submitted\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setJobData({ ...jobData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Clear\"))));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/natal/Desktop/job-organization/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","Button","Typography","Paper","useDispatch","useSelector","FileBase","TextField","useStyles","InputLabel","createJob","updateJob","MenuItem","FormControl","Select","SelectChangeEvent","Form","currentId","setCurrentId","jobData","setJobData","title","company","status","location","link","selectedFile","job","state","jobs","find","message","_id","dispatch","classes","clear","handleSubmit","e","preventDefault","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport TextField from '@mui/material/TextField'\nimport useStyles from './styles';\nimport InputLabel from '@mui/material/InputLabel';\nimport { createJob, updateJob } from '../../actions/jobs';\n\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [jobData, setJobData] = useState({title: '', company: '', status: '', location: '', link: '', selectedFile: '' });\n  const job = useSelector((state) => (currentId ? state.jobs.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (job) setJobData(job);\n  }, [job]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setJobData({ title: '', company: '', link: '', status: '', location:'', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createJob(jobData));\n      clear();\n    } else {\n      dispatch(updateJob(currentId, jobData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n   \n        <Typography variant=\"h6\">{currentId ? `Editing \"${job.title}\"` : 'Enter a Job'}</Typography>\n       \n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={jobData.title} onChange={(e) => setJobData({ ...jobData, title: e.target.value })} />\n        <TextField name=\"company\" variant=\"outlined\" label=\"Company\" fullWidth value={jobData.company} onChange={(e) => setJobData({ ...jobData, company: e.target.value })} />\n        \n        <TextField name=\"Location\" variant=\"outlined\" label=\"Location\" fullWidth  value={jobData.location} onChange={(e) => setJobData({ ...jobData, location: e.target.value })} />\n        <TextField name=\"Link\" variant=\"outlined\" label=\"Link\" fullWidth multiline rows={4} value={jobData.link} onChange={(e) => setJobData({ ...jobData, link: e.target.value })} />\n\n        <FormControl>\n        <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n        <Select  labelId=\"demo-simple-select-label\" fullWidth value={jobData.status} label=\"Status\" onChange={(e) => setJobData({ ...jobData, status: e.target.value })}>\n        <MenuItem value={\"Not Started\"}>Not Started</MenuItem>\n        <MenuItem value={\"In Progress\"}>In Progress</MenuItem>\n        <MenuItem value={\"Submitted\"}>Submitted</MenuItem>\n        </Select>\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setJobData({ ...jobData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </FormControl>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}